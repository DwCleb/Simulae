// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> Should be render a Apple Pay or Google Pay button - Dark mode 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "transparent",
      "borderColor": "#FF6117AF",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="end"
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be render a Apple Pay or Google Pay button - Light mode 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#474C55",
      "borderColor": "#474C55",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="start"
    logo={true}
    noRTL={true}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be render disabled button 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#0000005F",
      "borderColor": "#FFFFFF5F",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="start"
    logo={true}
    noRTL={true}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be render with not exists variant color text  1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#0000005F",
      "borderColor": "#FFFFFF5F",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="start"
    logo={true}
    noRTL={true}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be render with not exists variant with iconName 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#0000005F",
      "borderColor": "#FFFFFF5F",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="start"
    logo={true}
    noRTL={true}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be render with primary layout style - Dark theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#0000005F",
      "borderColor": "#FFFFFF5F",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="start"
    logo={true}
    noRTL={true}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be render with primary layout style - Light theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#474C55",
      "borderColor": "transparent",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
/>
`;

exports[`<Button /> Should be render with secondary layout style - Dark theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#878A8F",
      "borderColor": "transparent",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="end"
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be render with secondary layout style - Light theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#474C55",
      "borderColor": "transparent",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="end"
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be render with tertiary layout style - Dark theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#00B0B95F",
      "borderColor": "transparent",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="end"
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be render with tertiary layout style - Light theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "transparent",
      "borderColor": "#DFE1DF",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="end"
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be rendered a large button 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#00A5AE",
      "borderColor": "#00A5AE",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="end"
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be rendered a primary button with themeVariants - Light mode 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#0000005F",
      "borderColor": "#FFFFFF5F",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="start"
    logo={true}
    noRTL={true}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be rendered a secondary button with themeVariants - Dark mode 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#00B0B9",
      "borderColor": "#00B0B9",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="end"
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> Should be rendered a small button 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#00A5AE",
      "borderColor": "#00A5AE",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 76,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 337.5,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="end"
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> renders button with just icon - Dark theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#474C55",
      "borderColor": "#474C55",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <View
    align={true}
    container={false}
    justify={true}
    noBackground={true}
    pointerEvents="none"
    row={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flexBasis": "auto",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 0,
          "justifyContent": "center",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      disabled={true}
      numberOfLines={1}
      onPress={[MockFunction]}
      style={
        Array [
          Object {
            "color": "#DFE1DF",
            "fontFamily": "Jawwy-Bold",
            "fontSize": 28,
            "fontStyle": "normal",
            "fontWeight": "800",
            "lineHeight": 52,
            "textTransform": "uppercase",
          },
        ]
      }
      variant="pay"
    >
      Pay
    </Text>
    <Text
      allowFontScaling={false}
      direction="start"
      logo={true}
      noRTL={true}
      style={
        Array [
          Object {
            "color": "white",
            "fontSize": 44,
          },
          Array [
            Object {
              "color": "white",
              "marginLeft": 16,
              "marginRight": 16,
            },
          ],
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
      styleIcon={
        Object {
          "transform": Array [
            Object {
              "scaleX": 1,
            },
          ],
        }
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`<Button /> renders button with just icon - Light theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#474C55",
      "borderColor": "#474C55",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="start"
    logo={true}
    noRTL={true}
    style={
      Array [
        Object {
          "color": "white",
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> renders correctly as disable 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#000000",
      "borderColor": "#FFFFFF",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <View
    align={true}
    container={false}
    justify={true}
    noBackground={true}
    pointerEvents="auto"
    row={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flexBasis": "auto",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 0,
          "justifyContent": "center",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      disabled={false}
      numberOfLines={1}
      onPress={[MockFunction]}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Jawwy-Bold",
            "fontSize": 28,
            "fontStyle": "normal",
            "fontWeight": "800",
            "lineHeight": 52,
            "textTransform": "uppercase",
          },
        ]
      }
      variant="pay"
    >
      Pay
    </Text>
    <Text
      allowFontScaling={false}
      direction="start"
      logo={true}
      noRTL={true}
      style={
        Array [
          Object {
            "color": "white",
            "fontSize": 44,
          },
          Array [
            Object {
              "color": "white",
              "marginLeft": 16,
              "marginRight": 16,
            },
          ],
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
      styleIcon={
        Object {
          "transform": Array [
            Object {
              "scaleX": 1,
            },
          ],
        }
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`<Button /> renders correctly as small 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#00A5AE",
      "borderColor": "#00A5AE",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <Text
    allowFontScaling={false}
    direction="end"
    style={
      Array [
        Object {
          "color": undefined,
          "fontSize": 44,
        },
        Array [
          Object {
            "color": "white",
            "marginLeft": 16,
            "marginRight": 16,
          },
        ],
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
    styleIcon={
      Object {
        "transform": Array [
          Object {
            "scaleX": 1,
          },
        ],
      }
    }
  >
    
  </Text>
</View>
`;

exports[`<Button /> renders correctly in Dark Theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#0000005F",
      "borderColor": "#FFFFFF5F",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <View
    align={true}
    container={false}
    justify={true}
    noBackground={true}
    pointerEvents="none"
    row={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flexBasis": "auto",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 0,
          "justifyContent": "center",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      disabled={true}
      numberOfLines={1}
      onPress={[MockFunction]}
      style={
        Array [
          Object {
            "color": "#FFFFFFAF",
            "fontFamily": "Jawwy-Bold",
            "fontSize": 28,
            "fontStyle": "normal",
            "fontWeight": "800",
            "lineHeight": 52,
            "textTransform": "uppercase",
          },
        ]
      }
      variant="pay"
    >
      Pay
    </Text>
    <Text
      allowFontScaling={false}
      direction="start"
      logo={true}
      noRTL={true}
      style={
        Array [
          Object {
            "color": "white",
            "fontSize": 44,
          },
          Array [
            Object {
              "color": "white",
              "marginLeft": 16,
              "marginRight": 16,
            },
          ],
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
      styleIcon={
        Object {
          "transform": Array [
            Object {
              "scaleX": 1,
            },
          ],
        }
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`<Button /> renders correctly in Light Theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#000000",
      "borderColor": "#FFFFFF",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <View
    align={true}
    container={false}
    justify={true}
    noBackground={true}
    pointerEvents="auto"
    row={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flexBasis": "auto",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 0,
          "justifyContent": "center",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      direction="start"
      logo={true}
      noRTL={true}
      style={
        Array [
          Object {
            "color": "white",
            "fontSize": 44,
          },
          Array [
            Object {
              "color": "white",
              "marginLeft": 16,
              "marginRight": 16,
            },
          ],
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
      styleIcon={
        Object {
          "transform": Array [
            Object {
              "scaleX": 1,
            },
          ],
        }
      }
    >
      
    </Text>
    <Text
      disabled={false}
      numberOfLines={1}
      onPress={[MockFunction]}
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontFamily": "Jawwy-Bold",
            "fontSize": 28,
            "fontStyle": "normal",
            "fontWeight": "800",
            "lineHeight": 52,
            "textTransform": "uppercase",
          },
        ]
      }
      variant="pay"
    >
      Pay
    </Text>
  </View>
</View>
`;

exports[`<Button /> renders correctly in RTL 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#0000005F",
      "borderColor": "#FFFFFF5F",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <View
    align={true}
    container={false}
    justify={true}
    noBackground={true}
    pointerEvents="none"
    row={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flexBasis": "auto",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 0,
          "justifyContent": "center",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      disabled={true}
      numberOfLines={1}
      onPress={[MockFunction]}
      style={
        Array [
          Object {
            "color": "#FFFFFFAF",
            "fontFamily": "Jawwy-Bold",
            "fontSize": 28,
            "fontStyle": "normal",
            "fontWeight": "800",
            "lineHeight": 52,
            "textTransform": "uppercase",
          },
        ]
      }
      variant="pay"
    >
      Pay
    </Text>
    <Text
      allowFontScaling={false}
      direction="start"
      logo={true}
      noRTL={true}
      style={
        Array [
          Object {
            "color": "white",
            "fontSize": 44,
          },
          Array [
            Object {
              "color": "white",
              "marginLeft": 16,
              "marginRight": 16,
            },
          ],
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
      styleIcon={
        Object {
          "transform": Array [
            Object {
              "scaleX": 1,
            },
          ],
        }
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`<Button /> renders with icon - Direction End - Dark theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#0000005F",
      "borderColor": "#FFFFFF5F",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <View
    align={true}
    container={false}
    justify={true}
    noBackground={true}
    pointerEvents="none"
    row={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flexBasis": "auto",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 0,
          "justifyContent": "center",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      disabled={true}
      numberOfLines={1}
      onPress={[MockFunction]}
      style={
        Array [
          Object {
            "color": "#FFFFFFAF",
            "fontFamily": "Jawwy-Bold",
            "fontSize": 28,
            "fontStyle": "normal",
            "fontWeight": "800",
            "lineHeight": 52,
            "textTransform": "uppercase",
          },
        ]
      }
      variant="pay"
    >
      Pay
    </Text>
    <Text
      allowFontScaling={false}
      direction="start"
      logo={true}
      noRTL={true}
      style={
        Array [
          Object {
            "color": "white",
            "fontSize": 44,
          },
          Array [
            Object {
              "color": "white",
              "marginLeft": 16,
              "marginRight": 16,
            },
          ],
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
      styleIcon={
        Object {
          "transform": Array [
            Object {
              "scaleX": 1,
            },
          ],
        }
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`<Button /> renders with icon - Direction End - Light theme 1`] = `
<View
  accessibilityLabel="Button Test"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#474C55",
      "borderColor": "#474C55",
      "borderRadius": 16,
      "borderWidth": 2,
      "flexDirection": "row",
      "height": 88,
      "justifyContent": "center",
      "marginBottom": 20,
      "marginLeft": 10,
      "marginRight": 10,
      "marginTop": 20,
      "opacity": 1,
      "width": 675,
    }
  }
>
  <View
    align={true}
    container={false}
    justify={true}
    noBackground={true}
    pointerEvents="none"
    row={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flexBasis": "auto",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 0,
          "justifyContent": "center",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "width": "100%",
        },
      ]
    }
  >
    <Text
      disabled={true}
      numberOfLines={1}
      onPress={[MockFunction]}
      style={
        Array [
          Object {
            "color": "#DFE1DF",
            "fontFamily": "Jawwy-Bold",
            "fontSize": 28,
            "fontStyle": "normal",
            "fontWeight": "800",
            "lineHeight": 52,
            "textTransform": "uppercase",
          },
        ]
      }
      variant="pay"
    >
      Pay
    </Text>
    <Text
      allowFontScaling={false}
      direction="start"
      logo={true}
      noRTL={true}
      style={
        Array [
          Object {
            "color": "white",
            "fontSize": 44,
          },
          Array [
            Object {
              "color": "white",
              "marginLeft": 16,
              "marginRight": 16,
            },
          ],
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
      styleIcon={
        Object {
          "transform": Array [
            Object {
              "scaleX": 1,
            },
          ],
        }
      }
    >
      
    </Text>
  </View>
</View>
`;
